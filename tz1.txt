Продолжаем разработку приложения на React «График компетенций»
Необходимо реализовать график, отображающий взаимосвязь между компетенциями сотрудников и связанными навыками. Я установил chart.js 
для отображения гругового графика из двух колец.
Вот как должно это выглядеть: На внешнем кольце кругового графика отображаются навыки, на внутреннем кольце отображаются компетенции. При нажатии на компетенцию, 
должны отображаться линии, плавно соединяющие её со связанными навыками. Линии основных навыков (mainSkills) - 
оранжевые, дополнительных навыков(otherSkills) - фиолетовые.
1.	реализовать возможность выбора навыка, и отображения всех связанных с ним компетенций.
2.	при выборе компетенции, соответствующие навыки должны располагаться как можно ближе, 
чтобы исключить длинных пересекающихся между собой линий.
3.	реализовать анимацию плавной отрисовки этих соединительных линий.
Предложи полную структуру приложения: папки и вложенные файлы. Предложи подробный план реализации. А так же имеется файл src/data.js с данными:
[
  {
    name: "Финансовый аналитик",
    mainSkills: ["Excel", "SQL", "VBA", "1С"],
    otherSkills: ["Power BI", "Python"],
  },
  {
    name: "Предприниматель",
    mainSkills: ["1C", "Excel", "Power BI"],
    otherSkills: [
      "Google Analytics",
      "Яндекс.Метрика",
      "Python",
      "SQL",
      "Tilda",
    ],
  },
  {
    name: "Продуктовый дизайнер",
    mainSkills: [
      "Figma",
      "Sketch",
      "Illustrator",
      "Photoshop",
      "Principle",
      "Tilda",
    ],
    otherSkills: ["Shopify", "Protopie", "Cinema 4D"],
  },
  {
    name: "Менеджер проекта",
    mainSkills: [
      "Visio",
      "1C",
      "Google Analytics",
      "Яндекс.Метрика",
      "Python",
      "SQL",
      "Tilda",
    ],
    otherSkills: ["Figma", "Sketch", "Shopify"],
  },
  {
    name: "Финансовый менеджер",
    mainSkills: ["1C", "Excel", "Power BI"],
    otherSkills: ["BPMN"],
  },
  {
    name: "Руководитель финансового департамента компании",
    mainSkills: ["Sketch", "Figma"],
    otherSkills: ["Shopify", "HQL"],
  },

  {
    name: "Продуктовый аналитик",
    mainSkills: [
      "Google Analytics",
      "Яндекс.Метрика",
      "SQL",
      "Power BI",
      "Python",
      "Excel",
    ],
    otherSkills: ["HQL", "Tableau", "R", "Machine learning"],
  },

  {
    name: "Руководитель финансового продукта",
    mainSkills: ["Visio"],
    otherSkills: ["Python"],
  },
  {
    name: "Менеджер по маркетингу",
    mainSkills: [
      "Google Analytics",
      "Яндекс.Метрика",
      "Google Ads",
      "Ahrefs",
      "Главред",
      "My Target",
    ],
    otherSkills: ["Tilda", "Photoshop", "Xenu", "Python"],
  },

  {
    name: "Менеджер по цифровой трансформации",
    mainSkills: [
      "Visio",
      "Google Analytics",
      "Яндекс.Метрика",
      "Python",
      "SQL",
      "Tilda",
    ],
    otherSkills: ["Figma", "Sketch", "Shopify"],
  },
]

компоненты Chart.js, Skill.js и Competence.js, которые будут отвечать за отображение данных на графике. 
Далее, импортируем данные из файла data.js и напишем логику выбора навыка и компетенции. 
После этого, добавим анимацию для плавного отображения соединительных линий.

Структура приложения:

- src/
  - components/
    - Chart.js
    - Skill.js
    - Competence.js
  - data/
    - data.js
- App.jsx
- index.js 
- index.css 

План реализации:

1. Создание компонента Chart.js для отображения графика компетенций.
2. Создание компонента Skill.js для отображения навыков.
3. Создание компонента Competence.js для отображения компетенций.
4. Импорт данных из файла data.js.
5. Создание функционала выбора навыка и отображения связанных с ним компетенций.
6. Создание функционала выбора компетенции и расположение связанных с ней навыков близко друг к другу.
7. Реализация анимации плавной отрисовки соединительных линий.
8. Тестирование и отладка приложения.
